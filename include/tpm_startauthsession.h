// Copyright (C) 2024 Fondazione LINKS 

// This program is free software; you can redistribute it and/or modify 
// it under the terms of the GNU General Public License as published by the Free Software Foundation; version 2.

// This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
// without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
// See the GNU General Public License for more details.

// You should have received a copy of the GNU General Public License along with this program; if not, 
// write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.

#ifndef _TPM_STARTAUTHSESSION_
#define _TPM_STARTAUTHSESSION_

#include <stdbool.h>
#include <string.h>

#include "files.h"
#include "log.h"
#include "object.h"
#include "tpm2.h"
#include "tpm2_auth_util.h"
#include "tpm2_tool.h"
#include "tpm2_alg_util.h"
#include "tpm2_options.h"

typedef struct tpm2_startauthsession_ctx tpm2_startauthsession_ctx;
struct tpm2_startauthsession_ctx {
    struct {
        TPM2_SE type;
        TPMI_ALG_HASH halg;
        TPMT_SYM_DEF sym;
        struct {
            /*
             * Salt generated by esys is encrypted using the tpmkey and
             * encryption does not require auth to be specified.
             */
            const char *key_context_arg_str;
            tpm2_loaded_object key_context_object;
        } tpmkey;

        struct {
            /*
             * While TPM2_CC_StartAuthSession does not required the auth of the
             * bind to be specified, it is captured here for esys to calculate
             * the sessionkey.
             */
            const char *bind_context_arg_str;
            const char *bind_context_auth_str;
            tpm2_loaded_object bind_context_object;
        } bind;
    } session;
    struct {
        const char *path;
    } output;

    tpm2_session_data *session_data;
    TPMA_SESSION attrs;
    bool is_real_policy_session;
    bool is_hmac_session;
    bool is_session_encryption_possibly_needed;
    bool is_session_audit_required;
    /* Salted/ Bounded session combinations */
    bool is_salted;
    bool is_bounded;
    bool is_salt_and_bind_obj_same;

    const char *name_path;
    TPM2B_NAME name;
};

tool_rc tpm_startauthsession(ESYS_CONTEXT *ectx);

#endif